#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// #include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define RAISE 1
#define LOWER 2
#define FUN 3
#define SETTING 4

/ {
    combos {
        compatible = "zmk,combos";

        caps_word {
            key-positions = <17 18>;
            bindings = <&caps_word>;
        };

        to_base {
            bindings = <&to 0>;
            key-positions = <38 39>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "HML";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            flavor = "balanced";
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "HMR";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        // mwh: behavior_mouse_scroll {
        //   compatible = "zmk,behavior-mouse-scroll";
        //   label = "MOUSE_SCROLL";
        //   #binding-cells = <1>;
        //   delay-ms = <0>;
        //   time-to-max-speed-ms = <10>;
        //   acceleration-exponent = <500>;
        // };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        setting {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB               &kp Q  &kp W  &kp E         &kp R           &kp T          &kp Y             &kp U        &kp I      &kp O    &kp P     &kp BACKSPACE
&mt LEFT_CONTROL ESC  &kp A  &kp S  &kp D         &kp F           &kp G          &kp H             &kp J        &kp K      &kp L    &kp SEMI  &mt RIGHT_CONTROL SQT
&kp LEFT_SHIFT        &kp Z  &kp X  &kp C         &kp V           &kp B          &kp N             &kp M        &kp COMMA  &kp DOT  &kp FSLH  &mt RSHIFT ENTER
                                    &kp LEFT_ALT  &mt LCMD SPACE  &lt 2 SPACE    &mt RSHIFT ENTER  &lt 1 SPACE  &kp RCMD
            >;
        };

        raise {
            bindings = <
&trans  &kp N1           &kp N2        &kp N3                &kp N4                 &kp N5                  &kp N6     &kp N7     &kp N8     &kp N9     &kp N0         &trans
&trans  &kp EXCLAMATION  &kp QUESTION  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans                  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp BACKSPACE  &trans
&trans  &trans           &trans        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans                  &kp GRAVE  &kp EQUAL  &kp MINUS  &trans     &kp BSLH       &trans
                                       &trans                &mo 3                  &mt LEFT_SHIFT SPACE    &trans     &trans     &trans
            >;

            label = "raise";
        };

        lower {
            bindings = <
&kp LC(LG(Q))         &trans                &kp LS(LG(LEFT_BRACKET))  &msc SCROLL_UP     &kp LS(LG(RIGHT_BRACKET))  &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans                &kp LG(LEFT_BRACKET)  &msc SCROLL_LEFT          &msc SCROLL_DOWN   &msc SCROLL_RIGHT          &kp ENTER        &trans  &trans  &trans  &trans  &trans  &trans
&kp LS(LG(NUMBER_4))  &trans                &kp C_MUTE                &kp C_VOLUME_DOWN  &kp C_VOLUME_UP            &kp LC(ENTER)    &trans  &trans  &trans  &trans  &trans  &trans
                                                                      &trans             &trans                     &trans           &trans  &trans  &trans
            >;

            label = "lower";
        };

        fun {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        setting {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
